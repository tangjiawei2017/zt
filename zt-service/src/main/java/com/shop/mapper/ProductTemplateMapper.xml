<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.mapper.ProductTemplateMapper">
	<resultMap id="BaseResultMap"
		type="com.shop.model.ProductTemplateDO">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="NAME" jdbcType="VARCHAR" property="name" />
		<result column="BASICATTR" jdbcType="VARCHAR"
			property="basicattr" />
		<result column="EXTENDATTR" jdbcType="VARCHAR"
			property="extendattr" />
		<result column="ISDEFAULT" jdbcType="BIT" property="isdefault" />
	</resultMap>
	<resultMap id="templateAndCategoryMap"
		type="com.shop.model.ProductTemplateDO">
		<id column="ID" jdbcType="INTEGER" property="id" />
		<result column="NAME" jdbcType="VARCHAR" property="name" />
		<result column="BASICATTR" jdbcType="VARCHAR"
			property="basicattr" />
		<result column="EXTENDATTR" jdbcType="VARCHAR"
			property="extendattr" />
		<result column="ISDEFAULT" jdbcType="BIT" property="isdefault" />
		<collection property="categoryList"
			ofType="com.shop.model.ProductCategoryDO">
			<id property="id" column="pcId" />
			<result property="name" column="psname" />
			<result property="created" column="pcreated" />
			<result property="modified" column="pcmodified" />
			<result property="content" column="pcontent" />
			<result property="templateid" column="TEMPLATEID" />
		</collection>
	</resultMap>
	<sql id="Base_Column_List">
		ID, NAME, BASICATTR, EXTENDATTR, ISDEFAULT
	</sql>
	<sql id="tempate_category_list">
		select t.ID, t.NAME, t.BASICATTR, t.EXTENDATTR,
		t.ISDEFAULT,c.ID pcId,c.NAME psname,c.CREATED
		pcreated,c.MODIFIED
		pcmodified,c.CONTENT pcontent from
		T_PRODUCT_TEMPLATE t left join
		T_PRODUCT_CATEGORY c on
		t.ID=c.TEMPLATEID
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_PRODUCT_TEMPLATE
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from T_PRODUCT_TEMPLATE
		where NAME = #{name,jdbcType=VARCHAR}
	</select>
	<select id="selectAllTemplate"
		resultMap="templateAndCategoryMap">
		<include refid="tempate_category_list" />
	</select>
	<select id="judgeTemplateIsUse" parameterType="int"
		resultType="int">
		select count(template.ID) from T_PRODUCT_TEMPLATE template
		inner join
		T_PRODUCT_CATEGORY c
		on c.TEMPLATEID = template.ID inner join
		T_PRODUCT t on t.CATEGORYID =
		c.ID where template.ID=#{id}
	</select>
	<select id="findTemplateDOByProductId" parameterType="int"
		resultMap="BaseResultMap">
		select
		template.ID,
		template.NAME, template.BASICATTR,
		template.EXTENDATTR,template.ISDEFAULT from
		T_PRODUCT p
		inner join
		T_PRODUCT_CATEGORY c on p.CATEGORYID=c.ID inner
		join
		T_PRODUCT_TEMPLATE
		template on c.TEMPLATEID= template.ID
		where
		p.ID=#{id}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from T_PRODUCT_TEMPLATE
		where ID =
		#{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.shop.model.ProductTemplateDO">
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into T_PRODUCT_TEMPLATE (NAME, BASICATTR, EXTENDATTR,ISDEFAULT)
		values (#{name,jdbcType=VARCHAR},
		#{basicattr,jdbcType=VARCHAR},
		#{extendattr,jdbcType=VARCHAR},#{isdefault,jdbcType=BIT})
	</insert>
	<insert id="insertSelective"
		parameterType="com.shop.model.ProductTemplateDO">
		<selectKey keyProperty="id" order="AFTER"
			resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into T_PRODUCT_TEMPLATE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				NAME,
			</if>
			<if test="basicattr != null">
				BASICATTR,
			</if>
			<if test="extendattr != null">
				EXTENDATTR,
			</if>
			<if test="isdefault != null">
				ISDEFAULT,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="basicattr != null">
				#{basicattr,jdbcType=VARCHAR},
			</if>
			<if test="extendattr != null">
				#{extendattr,jdbcType=VARCHAR},
			</if>
			<if test="isdefault != null">
				#{isdefault,jdbcType=BIT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.shop.model.ProductTemplateDO">
		update T_PRODUCT_TEMPLATE
		<set>
			<if test="name != null">
				NAME = #{name,jdbcType=VARCHAR},
			</if>
			<if test="basicattr != null">
				BASICATTR = #{basicattr,jdbcType=VARCHAR},
			</if>
			<if test="extendattr != null">
				EXTENDATTR = #{extendattr,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.shop.model.ProductTemplateDO">
		update T_PRODUCT_TEMPLATE
		set NAME =
		#{name,jdbcType=VARCHAR},
		BASICATTR = #{basicattr,jdbcType=VARCHAR},
		EXTENDATTR = #{extendattr,jdbcType=VARCHAR},
		where ID =
		#{id,jdbcType=INTEGER}
	</update>
</mapper>